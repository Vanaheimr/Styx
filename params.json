{"name":"Styx","body":"![Styx logo](/Vanaheimr/Styx/raw/master/artwork/styx_small.png)\r\n\r\n[Styx](http://github.com/Vanaheimr/Styx) is the foundation of a graph-based data flow framework for any kind of data processing.\r\nIt is used heavily within [Balder](http://github.com/Vanaheimr/Balder) a data flow framework for\r\n[property graph models](http://github.com/tinkerpop/gremlin/wiki/Defining-a-Property-Graph) on .NET/Mono.\r\nA process graph is composed of a set of process vertices connected to one another by a set of communication edges.\r\nStyx supports the splitting, merging, transformation and concurrent processing of data from input to output. It comes in three flavors:\r\n\r\n#### Usage\r\n\r\n\r\n##### Pipes\r\nThe **Pipes** subproject is a lazy data flow framework.    \r\n![Pipes visualization](/Vanaheimr/Styx/raw/master/artwork/pipes_small.png)\r\n\r\n    var List = new List<Int32>() { 0, 1, 2, 2, 3, 4, 4, 5, 6, 2, 7, 8, 9, 1 }.\r\n        DuplicateFilter().\r\n        RangeFilter(2, 7).\r\n        Skip(2).\r\n        RandomFilter(0.25).\r\n        ToList();\r\n\r\n##### Arrows\r\n\r\nThe **Arrows** subproject is an event-based data flow framework.    \r\n![Arrows visualization](/Vanaheimr/Styx/raw/master/artwork/arrows_small.png)\r\n\r\n\r\n##### Sensors\r\n\r\nThe **Sensors** subproject is an data source framework for all kinds of data emitting objects.    \r\n  ![Sensors visualization](/Vanaheimr/Styx/raw/master/artwork/sensors_small.png)\r\n\r\nThe following code will create an instance of a sensor producing a sinus wave. This could be used as a mockup for a voltage or current sensoring application - even when the frequency is very low here ;)    \r\nThe **WithTimestamp** extension method will modify the output of the sensor to include the timestamp when the 'measurement' took place.    \r\nThe **ToActiveSensor** extension method will transform the sensor from an lazy sensor to an event-sending sensor.    \r\nThe **SkipArrow** extension method will skip the first event.    \r\nThe **ActionArrow** extention method will call the given delegate for every received arrow/event.    \r\n\r\n    new SinusSensor(\"/dev/sinus\") {\r\n        Frequency            = 0.05,\r\n        Amplitude            = 240,\r\n        MeasurementIntervall = TimeSpan.FromSeconds(1)\r\n    }.\r\n    WithTimestamp().\r\n    ToActiveSensor(Autostart: true).\r\n    SkipArrow(1).\r\n    ActionArrow(measurement => {\r\n        Console.WriteLine(measurement.Timestamp + \"\\t\" + measurement.Value);\r\n    });\r\n\r\nYou will see the current timestamp and value of a slow sinus wave on the console output.\r\n\r\n\r\n#### Help and Documentation\r\n\r\nAdditional help and much more examples can be found in the [Wiki](http://github.com/Vanaheimr/Styx/wiki).   \r\nNews and updates can also be found on twitter by following: [@ahzf](http://www.twitter.com/ahzf).\r\n\r\n#### Installation\r\n\r\nThe installation of Styx is very straightforward.    \r\nJust check out or download its sources and all its dependencies:\r\n\r\n- [Illias Commons](http://www.github.com/Vanaheimr/Illias) for common .NET tools.\r\n- [NUnit](http://www.nunit.org/) for unit tests.\r\n\r\n#### License and your contribution\r\n\r\n[Styx](http://github.com/Vanaheimr/Styx) is released under the [Apache License 2.0](http://www.apache.org/licenses/LICENSE-2.0). For details see the [LICENSE](/Vanaheimr/Styx/blob/master/LICENSE) file.    \r\nTo suggest a feature, report a bug or general discussion: [http://github.com/Vanaheimr/Styx/issues](http://github.com/Vanaheimr/Styx/issues)    \r\nIf you want to help or contribute source code to this project, please use the same license.   \r\nThe coding standards can be found by reading the code ;)\r\n\r\n#### Acknowledgments\r\n\r\nStyx is a reimplementation of the [Pipes](http://github.com/tinkerpop/pipes) library for Java provided by [Tinkerpop](http://tinkerpop.com).    \r\nPlease read the [NOTICE](/Vanaheimr/Styx/blob/master/NOTICE) file for further credits.\r\n\r\n#### \r\n","google":"","tagline":"Styx is both a lazy and an event-based data flow framework for .NET and Mono.","note":"Don't delete this file! It's used internally to help with page regeneration."}